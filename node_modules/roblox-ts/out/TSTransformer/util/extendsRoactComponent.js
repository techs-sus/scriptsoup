"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extendsRoactComponent = void 0;
const RoactSymbolManager_1 = require("../classes/RoactSymbolManager");
const getExtendsNode_1 = require("./getExtendsNode");
const typescript_1 = __importDefault(require("typescript"));
function extendsRoactComponent(state, node) {
    if (state.services.roactSymbolManager) {
        const extendsNode = (0, getExtendsNode_1.getExtendsNode)(node);
        if (extendsNode) {
            const aliasSymbol = state.typeChecker.getSymbolAtLocation(extendsNode.expression);
            if (aliasSymbol) {
                const originalSymbol = typescript_1.default.skipAlias(aliasSymbol, state.typeChecker);
                return (originalSymbol ===
                    state.services.roactSymbolManager.getSymbolOrThrow(RoactSymbolManager_1.ROACT_SYMBOL_NAMES.Component) ||
                    originalSymbol ===
                        state.services.roactSymbolManager.getSymbolOrThrow(RoactSymbolManager_1.ROACT_SYMBOL_NAMES.PureComponent));
            }
        }
    }
    return false;
}
exports.extendsRoactComponent = extendsRoactComponent;
//# sourceMappingURL=extendsRoactComponent.js.map