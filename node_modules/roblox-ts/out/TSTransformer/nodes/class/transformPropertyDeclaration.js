"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformPropertyDeclaration = void 0;
const LuauAST_1 = __importDefault(require("../../../LuauAST"));
const diagnostics_1 = require("../../../Shared/diagnostics");
const DiagnosticService_1 = require("../../classes/DiagnosticService");
const transformExpression_1 = require("../expressions/transformExpression");
const transformObjectKey_1 = require("../transformObjectKey");
const typescript_1 = __importDefault(require("typescript"));
function transformPropertyDeclaration(state, node, name) {
    if (!typescript_1.default.hasStaticModifier(node)) {
        return LuauAST_1.default.list.make();
    }
    if (typescript_1.default.isPrivateIdentifier(node.name)) {
        DiagnosticService_1.DiagnosticService.addDiagnostic(diagnostics_1.errors.noPrivateIdentifier(node));
        return LuauAST_1.default.list.make();
    }
    if (!node.initializer) {
        return LuauAST_1.default.list.make();
    }
    return LuauAST_1.default.list.make(LuauAST_1.default.create(LuauAST_1.default.SyntaxKind.Assignment, {
        left: LuauAST_1.default.create(LuauAST_1.default.SyntaxKind.ComputedIndexExpression, {
            expression: name,
            index: (0, transformObjectKey_1.transformObjectKey)(state, node.name),
        }),
        operator: "=",
        right: (0, transformExpression_1.transformExpression)(state, node.initializer),
    }));
}
exports.transformPropertyDeclaration = transformPropertyDeclaration;
//# sourceMappingURL=transformPropertyDeclaration.js.map