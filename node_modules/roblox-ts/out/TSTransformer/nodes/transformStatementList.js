"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformStatementList = void 0;
const LuauAST_1 = __importDefault(require("../../LuauAST"));
const transformStatement_1 = require("./statements/transformStatement");
const createHoistDeclaration_1 = require("../util/createHoistDeclaration");
const typescript_1 = __importDefault(require("typescript"));
function transformStatementList(state, statements, exportInfo) {
    var _a;
    const result = LuauAST_1.default.list.make();
    for (const statement of statements) {
        const [transformedStatements, prereqStatements] = state.capture(() => (0, transformStatement_1.transformStatement)(state, statement));
        if (state.compilerOptions.removeComments !== true) {
            LuauAST_1.default.list.pushList(result, state.getLeadingComments(statement));
        }
        const hoistDeclaration = (0, createHoistDeclaration_1.createHoistDeclaration)(state, statement);
        if (hoistDeclaration) {
            LuauAST_1.default.list.push(result, hoistDeclaration);
        }
        LuauAST_1.default.list.pushList(result, prereqStatements);
        LuauAST_1.default.list.pushList(result, transformedStatements);
        const lastStatement = (_a = transformedStatements.tail) === null || _a === void 0 ? void 0 : _a.value;
        if (lastStatement && LuauAST_1.default.isFinalStatement(lastStatement)) {
            break;
        }
        if (exportInfo) {
            const containerId = exportInfo.id;
            const exportMapping = exportInfo.mapping.get(statement);
            if (exportMapping !== undefined) {
                for (const exportName of exportMapping) {
                    LuauAST_1.default.list.push(result, LuauAST_1.default.create(LuauAST_1.default.SyntaxKind.Assignment, {
                        left: LuauAST_1.default.property(containerId, exportName),
                        operator: "=",
                        right: LuauAST_1.default.id(exportName),
                    }));
                }
            }
        }
    }
    if (state.compilerOptions.removeComments !== true && statements.length > 0) {
        const lastStatement = statements[statements.length - 1];
        const lastToken = lastStatement.parent.getLastToken();
        if (lastToken && !typescript_1.default.isNodeDescendantOf(lastToken, lastStatement)) {
            LuauAST_1.default.list.pushList(result, state.getLeadingComments(lastToken));
        }
    }
    return result;
}
exports.transformStatementList = transformStatementList;
//# sourceMappingURL=transformStatementList.js.map